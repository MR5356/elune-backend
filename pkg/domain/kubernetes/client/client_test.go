package client

import "testing"

const localKubeConfig = "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1Ea3dPREE0TVRBd05Wb1hEVE16TURrd05UQTRNVEF3TlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHpzCnpTN0cranpUR25BcHE3Y1BCZDkzWVMrdDNVWXM0QjlpSE1ZbEd4Wi81ZXFqZ2hOcG5pR29EMVpYY3FEOTNFQlkKS2NCVWdDTWs1bXM4S1F1MkFFR3pTYkxOZGtpUnhGZEhpakJkNkUzV2REZy9YUkt5WkgwT3BjUFI5bmZJMjJHaApENDEwbGpsY25PeGllZDdLeW1CdCtUUXBmdGFTUW1FYTRSNy9QL3ozRHpVeGhFd25CeE01VUozeTMyUDdGSUxxClhkaGxTaFoxdi9aQkt3NWE0eERzazZSMXM3T3FoaDdmUk1laHJNNEhUbHpjN0ZQVzZRSkhDT0pFUTBVd2lDQmsKckh2UXRKaGFZWGRDYjJUU1gvSlRUMjBuKzR0eWVDNnpTU0JsVmJUSi9Wc1MrMFhIS3VBUFkyb1JOWVFJNVViTgozTXpxYTh3RnhOZmprNzQvelJNQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCamcrMHQ3Smk3NXhJVmFUVHI5cExiR3JNR0pNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR3o2aDZ4MzN4TS8ycmhDYzkxWApZa0o5RWdjQjNUOHBPdm9yVzM2SVVneklLb3RwRGR3VzNXOGdsaFgvNHArT25oK00vRkFvS1ZQSVhDRlh6Tkc4ClhuakVlM2xmTU1tZlRhb0JhaWJZK1gvSUtHa0QrdnlnOW5YaXdaak1NNVU5N1BqT1RzbVRWc0FoV0NKT0dCUm0KNHd3WENIRTlhbEFhM213L2VHTWllZzVYWU1lZklYR2ZWd3Rtc1k5dUNSY2g2b2EzYW5RY05CanZ4bmdBNzNWWQp6eDQyaWlCZVhjazQybEdmOTF1NW5rVzVyaDRRV1prNVhEQWg5dXhpVkEwM1FhS1lIU0ZHRjdiaXJ6Z2dNelRQCmdOWjk0T29wd29QWi9kZ2JZUjluVlRaczZjMmQ4UVNHbklPckRXNTZmanJpalM2YWZvRUNhOWhBeFNPNWRkZkgKTUlnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://127.0.0.1:6443\n  name: docker-desktop\ncontexts:\n- context:\n    cluster: docker-desktop\n    user: docker-desktop\n  name: docker-desktop\ncurrent-context: docker-desktop\nkind: Config\npreferences: {}\nusers:\n- name: docker-desktop\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJY3BON1FTb2xaWnd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpBNU1EZ3dPREV3TURWYUZ3MHlOREV5TURReE1EQTBOVEZhTURZeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sc3dHUVlEVlFRREV4SmtiMk5yWlhJdFptOXlMV1JsCmMydDBiM0F3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGoxZE9ObzdZWllzZGsKd1lRNGNiaXVxSlZiWlFrVUl4MGpDb25NaThiRmtHV3A1dE1ucmJDaUlsbTVtYXhnS3l4MWt2TlBzSG4vYWRUNQpCd3RQMUR6Y0VUWTVrV2xiTkxKcWUzbGZGL2Q2dHZOWUtYR0lOdUtqZ2FzNk5sTjErNGphWTkvQ2NsdjZBWmN5Ck82Um5TVit1SFVWc1FzQ3ZjM0pzNXFoc2tOVkhsSTRWYndVaUoxakwzcHF3NHFJVC9sVHZneGVvTkswUGFkSHQKdGY0QStDQTkrNkdXZ3ZQMmhDdHRiWmtjZDNBWXNTaVBXZ1dMQ1ltT1BzTHZWVG4zTlNueGM2dDN5bmJuZ25TZQo2eTVBczdWM09PTmp0QVNvVTNiS25CVnJRUVViWUFRNy9YTmpMUzBSY3d4OExOejlWTnJDVk1hcmF3UTNubCtwCjJ3T1gxZ1pOQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZCamcrMHQ3Smk3NXhJVmFUVHI5cExiRwpyTUdKTUIwR0ExVWRFUVFXTUJTQ0VtUnZZMnRsY2kxbWIzSXRaR1Z6YTNSdmNEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBSzRQd0VkY2JuaGdpaXB5elRrVWlZZWVjcytGYWl2UmFWa3JwZXBIR21pR04rU05mSmlRWWdNdkcKRDZ5WXVBMWtNN0dTMEI2ZVJEclR0dFFpMjA5UUxjRHcxb3BTM01UK1lLVmxQdi9KMkNTTnNkQjFRdUxvZ3ZObwpUb0NSdUw4YkFaN1d1R1lnRGtEVklXc2ZHbHFHWDFHVW5hZjNaQ2pZKzhzQnRrR2NDbENkVUJHaFNCSTZ2aGJ3CjVCYXhaUmltSDJJR1M1L3dlWE0yWW5qT1FUdjJyTG5LeW15Qnc1dE12WnhNdjE3RUpmbll2eEEwdFJBM1FHWUsKM0dzaitKUWx5WkZWQnRrYkpFcFFiajY4Y0drVndKVUd5SUlpQ2tIU3UvRkk1a0UycHdpTFozOFgwVWVkS0paOQovR0Y5WGtQN3RhWW1yclBkZWtOcXlmRjFIZVgzRFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNDlYVGphTzJHV0xIWk1HRU9IRzRycWlWVzJVSkZDTWRJd3FKekl2R3haQmxxZWJUCko2MndvaUpadVptc1lDc3NkWkx6VDdCNS8yblUrUWNMVDlRODNCRTJPWkZwV3pTeWFudDVYeGYzZXJieldDbHgKaURiaW80R3JPalpUZGZ1STJtUGZ3bkpiK2dHWE1qdWtaMGxmcmgxRmJFTEFyM055Yk9hb2JKRFZSNVNPRlc4RgpJaWRZeTk2YXNPS2lFLzVVNzRNWHFEU3REMm5SN2JYK0FQZ2dQZnVobG9MejlvUXJiVzJaSEhkd0dMRW9qMW9GCml3bUpqajdDNzFVNTl6VXA4WE9yZDhwMjU0SjBudXN1UUxPMWR6ampZN1FFcUZOMnlwd1ZhMEVGRzJBRU8vMXoKWXkwdEVYTU1mQ3pjL1ZUYXdsVEdxMnNFTjU1ZnFkc0RsOVlHVFFJREFRQUJBb0lCQUNqNzFPTmN1S3dXWGNIZApJYmk1bER3dTdUY1VsSzUvcG9VZ0p5dVpWVGRDdzFidHc3d1dmWGljNzBENHlNNC8xZTZNY2FJN0g2YjNWYTA2ClBDbXZCd2ViUFFMY0NuU3lwUW1Nam9leG12NERIUUVWNjJ0U1hEQ0hhZEs5NVFPTExOSUVOME1XS1Q5dXU5RDQKYzVsMDFIWlFvNlZXMkt4Mit2Vm1CSlFLOWFLN1duT0JOTVhRZkRqQTRvRDJYOVJxdm9GUityRjFJeFJQSzZkVApKQVQxZHQvWVpTTUpBTGRPZGkrMTIySHJkY0pZL0VRQ1ZURm80ajl3d0c2czZSWHdFSnRRRlVTWjRDQ3FRU3dKCnVld2lWVTVyNTBYcmlhTVFzZjhlMFhUT3VzbnRrV3NxK2JsM1hqUVpwOTM5T3dRbjRkZ1J1UnpVQXNRKzZoRDIKNHVDbVBpRUNnWUVBN3pxa0tMT2lFQmtFOEVzY0w4QmVqZk1aVndJWjRPbnJOVHo2SEtqUmtjZ1EvRFlPL0ZDegp4S1JPZmd3N29jbzhtR2VqcGJmODZPYTRNTHVtNWpkWnVma2VZYW5rdDdYZlpQOHR4M1BvazhlRlVDbkFFdVdRCmh3TUN2OWx4VGNSQWNWM0E1OFlLdU9uSzVtendLNVN4M3dHbEFTQi9iN3R6bFgrbGsweWttNmtDZ1lFQTg4NjAKVzY2ZVFYREtXZERnZ21EeDNMNUErSjc4WE9QWUgyMDBTSWhaQnJEUzd2WEkvTlMzQndvdDNyaktRNmpMd2dOawpROUZFV3lpcWJQTjd4NG0zMEEwcUs4MEJCdWhHWE5DbEJDdzUzb3hqV0I4ZCtRdEMyL3E5LzZhY1NCOXFqSEkzCmZQSk1wMGl3U3VWcFhHZy9mQXdCRWJxclQ5d0w1MnIyNFhZa25BVUNnWUVBeDlJT2ptVEU2SGROZGJ6M05UZVUKZ3pMY0pwMzlxYTBacHVWZzhKRmVRMHQrVEh5RzllQWUyQkI1ODdVYUZpRExqbTE2OXBBQTh6VE1Bd0NxL3I2YQo5c2tMeEgzWktrNEM0K1IxZzVUZ1hwZVlWZ1laaG04ejBtSUVhT1VpUzlleUVEOUVReFJibm1yQjdNaHZyNmRMCkR6L2JhRjZSczIwNnRWUGlwRyt2U3NrQ2dZQkZMUm9waFZNcjJEZmg0ZzFCa1FZdkR1QmFhcW5LSlcrMkF3TTUKclU0dFF0Q21zcUJUZEh0MkNPSlk5bStWWVBoblZSVUcxUUtqSnRlc1VDMkh3VUNoVElyeG9Kb3cvb2l3WHhiagpKelZJT3VjWklzTWJYYUdienZwSDVsc2piNTZJdVFPYmRSaGd3cFFhdkJyMytEQkRIeGpTa2ZkM2trVGlaWXdsCkRxTjJqUUtCZ1FDU3pISUFKeWpwa0laSHBuQzNBaGRheW9NYWVOcUttYnNhSXoxRHl4bHYyVlRldERZNmI4bFUKdzdjOG1SSHNqMDFvUHM4K05wSHFKSk1WdEcwbWU1REorK2hIZGtRU3UxYjB6elUvdXlNVE80QytjYjdZT2M2cwpGODlvSTFCaWpmeDROVVYvTXhheXdzbzdkZWdLN2dEQ1dQZmRrNEo0UWw0TnpaTnpHSGV2V0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="

func TestNew(t *testing.T) {
	type args struct {
		kubeconfig []string
	}
	tests := []struct {
		name    string
		args    args
		wantErr bool
	}{
		{
			name: "normal",
			args: args{
				kubeconfig: []string{localKubeConfig},
			},
			wantErr: false,
		},
		{
			name: "empty",
			args: args{
				kubeconfig: []string{""},
			},
			wantErr: true,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			_, err := New(tt.args.kubeconfig...)
			if (err != nil) != tt.wantErr {
				t.Errorf("New() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
		})
	}
}

func TestClient_GetBaseInfo(t *testing.T) {
	tests := []struct {
		name string
	}{
		{
			name: "test",
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			c, err := New(localKubeConfig)
			if err != nil {
				panic(err)
			}
			c.GetVersion()
		})
	}
}
